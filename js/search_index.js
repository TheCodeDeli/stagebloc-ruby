var search_data = {"index":{"searchIndex":["stagebloc","apimethods","classmethods","configuration","user","birthday()","configuration()","configure()","created()","find()","get_attribute()","has_attribute()","has_attributes()","new()","photo()","readme"],"longSearchIndex":["stagebloc","stagebloc::apimethods","stagebloc::apimethods::classmethods","stagebloc::configuration","stagebloc::user","stagebloc::user#birthday()","stagebloc::configuration()","stagebloc::configure()","stagebloc::user#created()","stagebloc::user::find()","stagebloc::apimethods#get_attribute()","stagebloc::apimethods::classmethods#has_attribute()","stagebloc::apimethods::classmethods#has_attributes()","stagebloc::user::new()","stagebloc::user#photo()",""],"info":[["StageBloc","","classes/StageBloc.html","","<p>StageBloc\n<p>A Ruby API Client for stagebloc.com\n"],["StageBloc::APIMethods","","classes/StageBloc/APIMethods.html","","<p>StageBloc::APIMethods\n<p>Provides methods for creating methods for a <code>Hash</code>.\n\n<pre><code>class SomeEndpoint &lt; Struct.new(:attributes) ...\n</code></pre>\n"],["StageBloc::APIMethods::ClassMethods","","classes/StageBloc/APIMethods/ClassMethods.html","",""],["StageBloc::Configuration","","classes/StageBloc/Configuration.html","","<p>StageBloc::Configuration\n<p>Configuration options for StageBloc API client.\n\n<pre><code>StageBloc.configure do |c|\n  c.client_id ...\n</code></pre>\n"],["StageBloc::User","","classes/StageBloc/User.html","","<p>StageBloc::User\n<p>Wraps the users endpoint in the StageBloc API.\nstagebloc.com/developers/api/v1/users\n\n<pre><code>user ...</code></pre>\n"],["birthday","StageBloc::User","classes/StageBloc/User.html#method-i-birthday","()","<p>Returns <code>birthday</code> as a <code>Time</code>.\n"],["configuration","StageBloc","classes/StageBloc.html#method-c-configuration","()","<p>Returns an instance of StageBloc::Configuration\n"],["configure","StageBloc","classes/StageBloc.html#method-c-configure","()","<p>Set configuration options for API requests.\n\n<pre><code>StageBloc.configure do |c|\n  c.client_id = ENV.fetch(&#39;STAGEBLOC_CLIENT_ID&#39;) ...\n</code></pre>\n"],["created","StageBloc::User","classes/StageBloc/User.html#method-i-created","()","<p>Returns <code>created</code> as a <code>Time</code>.\n"],["find","StageBloc::User","classes/StageBloc/User.html#method-c-find","(user_id)","<p>Finds a StageBloc user by ID. Returns an instance of StageBloc::User\n\n<pre><code>user = StageBloc::User.find(&#39;user-id&#39;) ...</code></pre>\n"],["get_attribute","StageBloc::APIMethods","classes/StageBloc/APIMethods.html#method-i-get_attribute","(key)","<p>Returns the value from a hash from <code>key</code>.\n<p>Keys can be strings or symbols.\n\n<pre><code>endpoint = SomeEndpoint.new(&#39;first_name&#39; ...</code></pre>\n"],["has_attribute","StageBloc::APIMethods::ClassMethods","classes/StageBloc/APIMethods/ClassMethods.html#method-i-has_attribute","(*keys)","<p>Defines getter methods for a attributes.\n\n<pre><code>class SomeEndpoint &lt; Struct.new(:attributes)\n  include StageBloc::APIMethods ...\n</code></pre>\n"],["has_attributes","StageBloc::APIMethods::ClassMethods","classes/StageBloc/APIMethods/ClassMethods.html#method-i-has_attributes","(*keys)",""],["new","StageBloc::User","classes/StageBloc/User.html#method-c-new","(user_hash)","<p>Accepts user attributes as a Hash.\n\n<pre><code>user = StageBloc::User.new({ id: &#39;user-id&#39; })\nuser.id #=&gt; &quot;user-id&quot;\n</code></pre>\n"],["photo","StageBloc::User","classes/StageBloc/User.html#method-i-photo","()","<p>Formats the photo images hash.\n<p><code>:thumbnail_url</code>\n<p><code>:small_url</code>\n"],["README","","files/README_md.html","","<p>StageBloc - Ruby API Wrapper\n<p>The StageBloc gem is an API wrapper to push/receive data for\nan\nauthenticated ...\n"]]}}